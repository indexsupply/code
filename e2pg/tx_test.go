package e2pg

import (
	"bytes"
	"encoding/hex"
	"testing"

	"github.com/indexsupply/x/isxhash"
)

func check(t *testing.T, err error) {
	t.Helper()
	if err != nil {
		t.Fatal(err)
	}
}

func h2b(s string) []byte {
	b, _ := hex.DecodeString(s)
	return b
}

func TestSigHash(t *testing.T) {
	cases := []struct {
		desc   string
		txrlp  string
		signer string
	}{
		{
			"legacy",
			"f86d6d850ba43b740083015f9094d8da6bf26964af9d7eed9e03e53415d37aa960458803782dace9d90000801ca09a611f7abaa0e44c7e73c8926bbcb8c87bcd5023ce99fbbf5dff47b4ab52abcca00d5a9db90ea7dfebc428ae434ca81b215c83862e65d937315c308a520b58a3ff",
			"1Db3439a222C519ab44bb1144fC28167b4Fa6EE6",
		},
		{
			"EIP-1559",
			"02f8b301820457849502f9008505b8ae054e8304a95f9406af07097c9eeb7fd685c692751d5c66db49c21580b8443b4da69f000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000059c074db7dfbf18cc000c001a02dbeeba1debbc75c5b881a75543f9a89d1b14ad158d93ad21d3f1ff79e847d86a030f4e69fd7444659b6639581dbdc790ce28f8d8e73364f19cee895edc532a19a",
			"d8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
		},
		{
			"EIP-2930",
			"01f9039f018218bf85105e34df0083048a949410a0847c2d170008ddca7c3a688124f49363003280b902e4c11695480000000000000000000000004b274e4a9af31c20ed4151769a88ffe63d9439960000000000000000000000008510211a852f0c5994051dd85eaef73112a82eb5000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000bad4de000000000000000000000000607816a600000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000001146aa2600000000000000000000000000000000000000000000000000000000000001bc9b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000482579f93dc13e6b434e38b5a0447ca543d88a4600000000000000000000000000000000000000000000000000000000000000c42df546f40000000000000000000000004b274e4a9af31c20ed4151769a88ffe63d943996000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000007d93f93d41604572119e4be7757a7a4a43705f080000000000000000000000000000000000000000000000003782dace9d90000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000082b5a61569b5898ac347c82a594c86699f1981aa88ca46a6a00b8e4f27b3d17bdf3714e7c0ca6a8023b37cca556602fce7dc7daac3fcee1ab04bbb3b94c10dec301cc57266db6567aa073efaa1fa6669bdc6f0877b0aeab4e33d18cb08b8877f08931abf427f11bade042177db48ca956feb114d6f5d56d1f5889047189562ec545e1c000000000000000000000000000000000000000000000000000000000000f84ff7946856ccf24beb7ed77f1f24eee5742f7ece5557e2e1a00000000000000000000000000000000000000000000000000000000000000001d694b1dd690cc9af7bb1a906a9b5a94f94191cc553cec080a0d52f3dbcad3530e73fcef6f4a75329b569a8903bf6d8109a960901f251a37af3a00ecf570e0c0ffa6efdc6e6e49be764b6a1a77e47de7bb99e167544ffbbcd65bc",
			"1cED2cef30d40Bb3617F8d455071b69F3B12D06f",
		},
		{
			"random",
			"02f902fa0182095c83e8370385035d2310ea83032cc5943fc91a3afd70395cd496c647d5a6cc9d4b2b7fad87d19c2ff9bf8000b902843593564c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000064db0d4b00000000000000000000000000000000000000000000000000000000000000020b080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000d19c2ff9bf80000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000d19c2ff9bf800000000000000000000000000000000000000000000000000000003cc8a1522a8300000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000006f85e53b3c563d82925dc9ee1f37897afdc912e3c080a0da7222a52d81e16afec23d53fe778146927dbc23318512202afb1fbc5eaadcefa0188672870be213d8600b2daedc8c42453c997a8ae0c7516645557885c960def4",
			"ef9af587682D092d8D3C7341bfd7c10D9B7CFD65",
		},
		{
			"base goerli",
			"02f87483014a33038459682f008459682f3c82520894aed9dd4880c925015c9b00d97251d0ba32aebced87c1252eed4aff2380c080a0b1daf1a63000d9fa8b7cdad1156d9c132a62bf24d032c1a74f59f27c4b6be501a00350f28b0035d0312ccb90484dad7f8c2b822d28074177c2b3b58efa40e8ba4c",
			"2ce7dd6aad4b2ca4b2fc9289efa1185b86d09477",
		},
	}
	for _, tc := range cases {
		tx := Transaction{}
		tx.Unmarshal(h2b(tc.txrlp))
		signer, err := tx.Signer()
		check(t, err)
		if !bytes.Equal(signer, h2b(tc.signer)) {
			t.Errorf("%s %x\nwant: %s\ngot:  %x", tc.desc, isxhash.Keccak(h2b(tc.txrlp)), tc.signer, signer)
		}
	}
}
